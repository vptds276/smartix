/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.primeidea.camhunter.gui;

import com.primeidea.camhunter.App;
import com.primeidea.camhunter.core.JobController;
import com.primeidea.camhunter.core.ScanParam;
import com.primeidea.camhunter.core.Scanner;
import com.primeidea.camhunter.util.IPAddressFormatter;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.Serializable;
import java.text.ParseException;
import java.util.HashMap;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JPanel;

/**
 *
 * @author pro
 */
public class CurrentJob extends javax.swing.JPanel {

    private JPanel curPnl;
    Serializable prm;
    private static ScanParam sp;
    private String startIp;

    /**
     * Creates new form CurrentJob
     */
    public CurrentJob(JPanel curPnl, ScanParam sp) {
        this.curPnl = curPnl;
        this.sp = sp;

        initComponents();
        lbIp.setText(this.sp.getStartIp() + "-" + this.sp.getStopIp());
        switch (this.sp.getTypeCam()) {
            case 0:
                lbTypeCam.setText("Defeway");
                break;
            case 1:
                lbTypeCam.setText("Hipcams");
                ;
                break;
        }

        //Присваеваем имя кнопки равное hash коду объекта JPanel для того чтобы 
        //была возможность удалить из глобального HashMap
        Integer h = hashCode();
        btnDelJod.setName(h.toString());
        ActionListener actionListener = new DelJobActionListener();
        btnDelJod.addActionListener(actionListener);
        ActionListener actionListener1 = new RunStopJobActionListener();
        btnRunStopJob.addActionListener(actionListener1);
        
        

    }
//    public Serializable getCurrentPanel() {
//        return (Serializable) prm;
//    }
    //
    public class RunStopJobActionListener implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent e) {
            if (btnRunStopJob.isSelected()) {
                try {
                    btnRunStopJob.setText("||");
                    btnDelJod.setEnabled(false);
                    Scanner scanner = new Scanner();
                    
                    scanner.setIpFrom((int[]) new IPAddressFormatter().stringToValue(sp.getStartIp()));
                    scanner.setIpTo((int[]) new IPAddressFormatter().stringToValue(sp.getStopIp()));
                    scanner.setScanParam(sp);
                    
                    
                    Thread thread = new Thread(scanner);
                    thread.start();
//            public void actionPerformed(ActionEvent ae) {
//		String choice = ae.getActionCommand();
//		if (choice.equals("Quit")) {
//			System.exit(0);
//		}
//		if (choice.equals("Run")){
//			Scanner scanner = new Scanner();
//			try {
//				scanner.setIpFrom((int[]) new IPAddressFormatter().stringToValue(jft1.getText()));
//				scanner.setIpTo((int[]) new IPAddressFormatter().stringToValue(jft2.getText()));
//			} catch (ParseException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//			Thread thread =new Thread(scanner);
//			thread.start();
//		}
                } catch (ParseException ex) {
                    Logger.getLogger(CurrentJob.class.getName()).log(Level.SEVERE, null, ex);
                }

        } else {
            btnRunStopJob.setText(">");
            btnDelJod.setEnabled(true);
        }
        }
        
    }
    public class DelJobActionListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            JButton button = (JButton) e.getSource();
            String name = button.getName();
            new JobController().getJobList().remove(Integer.valueOf(name));
            setVisible(false);
        }
    }
    
    public int getCurPnl() {
        System.out.println(hashCode());
        return hashCode();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDelJod = new javax.swing.JButton();
        btnRunStopJob = new javax.swing.JToggleButton();
        lbIp = new javax.swing.JLabel();
        lbTypeCam = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        setAlignmentX(0.1F);
        setAlignmentY(0.1F);
        setMinimumSize(new java.awt.Dimension(170, 0));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(170, 32));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        btnDelJod.setText("X");

        btnRunStopJob.setText(">");
        btnRunStopJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunStopJobActionPerformed(evt);
            }
        });

        lbIp.setFont(new java.awt.Font("Verdana", 0, 8)); // NOI18N
        lbIp.setText("IP");

        lbTypeCam.setFont(new java.awt.Font("Verdana", 0, 9)); // NOI18N
        lbTypeCam.setText("TypeCam");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTypeCam)
                    .addComponent(lbIp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(btnRunStopJob)
                .addGap(0, 0, 0)
                .addComponent(btnDelJod))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbIp)
                .addGap(0, 0, 0)
                .addComponent(lbTypeCam))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnRunStopJob)
                .addComponent(btnDelJod))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRunStopJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunStopJobActionPerformed
        
    }//GEN-LAST:event_btnRunStopJobActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        getCurPnl();
    }//GEN-LAST:event_formMouseClicked

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 29 * hash + Objects.hashCode(this.curPnl);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final CurrentJob other = (CurrentJob) obj;
        return true;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelJod;
    private javax.swing.JToggleButton btnRunStopJob;
    private javax.swing.JLabel lbIp;
    private javax.swing.JLabel lbTypeCam;
    // End of variables declaration//GEN-END:variables
}
