/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.primeidea.camhunter.gui;


import com.primeidea.camhunter.core.ScanParam;
import java.io.Serializable;

/**
 *
 * @author pro
 */
public class AddNewJob extends javax.swing.JDialog {

    private ScanParam prm;
    private static int res;
    /**
     * Creates new form AddNewJob
     */
    public AddNewJob(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jSpinner1.setValue((int)300);
        jSpinner2.setValue((int)1000);
        jSpinner3.setValue((int)256);
        setLocationRelativeTo(this);
        res=-1;
    }

    public Serializable getParams() {
        return (Serializable) prm;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();
        jButton9 = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField3FocusLost(evt);
            }
        });

        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###.###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        try {
            jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###.###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jLabel1.setText("Алгоритм сканирования");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Через циклы", "Barier" }));

        jLabel2.setText("Тип камеры");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Defeway", "Hipcam" }));

        jLabel3.setText("Conn_time_out");

        jLabel4.setText("Read_time_out");

        jLabel5.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        jLabel5.setText("Количество потоков: ");

        jSpinner1.setFont(new java.awt.Font("Arial Narrow", 0, 12)); // NOI18N
        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000, 1));
        jSpinner1.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinner1, ""));

        jSpinner2.setFont(new java.awt.Font("Arial Narrow", 0, 12)); // NOI18N
        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000, 1));

        jSpinner3.setFont(new java.awt.Font("Arial Narrow", 0, 12)); // NOI18N

        jButton9.setText("V");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        btnCancel.setText("Отмена");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(jFormattedTextField2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 15, Short.MAX_VALUE)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))))
                .addGap(5, 5, 5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(btnCancel)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusLost

        String diapasone = jTextField3.getText();
        if (diapasone.isEmpty()) {
            return;
        }
        switch (diapasone.length()) {
            case 1:
                diapasone = "00" + diapasone;
                break;

            case 2:
                diapasone = "0" + diapasone;
                break;

        }
        //            findCamNoPass.clear();
        //            findCamPass.clear();

        //            try {
        //                List<String> notProtect = new ArrayList();
        //                List<String> protect = new ArrayList();
        //
        //                for (Camera camera : cameraManager.findCameras(Integer.valueOf(diapasone), jList6.getSelectedIndex() + 1)) {
        //                    switch (camera.getIsprotect()) {
        //                        case 0:
        //                        notProtect.add(camera.getAddr());
        //                        break;
        //                        case 1:
        //                        protect.add(camera.getAddr());
        //                        break;
        //                    }
        //                }
        //
        //                for (int i = 0; i < notProtect.size(); i++) {
        //                    findCamNoPass.addElement(notProtect.get(i));
        //
        //                }
        //                for (int i = 0; i < protect.size(); i++) {
        //                    findCamPass.addElement(protect.get(i));
        //                }
        //
        //                //findCamNoPass.addAll(notProtect);
        //                //findCamPass.addAll(protect);
        //            } catch (CameraBusinessException ex) {
        //                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        //            }
        //
        //            tb.setNoPassPass(findCamNoPass.getSize(), findCamPass.getSize());
        //
        jFormattedTextField1.setText(diapasone + "000.000.000");
        jFormattedTextField2.setText(diapasone + "255.255.255");
        jTextField2.setText("2");
    }//GEN-LAST:event_jTextField3FocusLost

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        res=1;
        int conn_time_out = (Integer) jSpinner1.getValue();
        int read_time_out = (Integer) jSpinner2.getValue();
        int countThreads = (Integer) jSpinner3.getValue();

        prm = new ScanParam(
                jFormattedTextField1.getText(),
                jFormattedTextField2.getText(),
                jComboBox1.getSelectedIndex(),
                jComboBox2.getSelectedIndex(),
                conn_time_out,
                read_time_out,
                countThreads
        );
        
        setVisible(false);

        //        scanPrm.add(el);
        //        ipList.clear();
        //        int typeScan = jCheckBox2.isSelected() ? 1 : 0;
        //        switch (typeScan) {
        //            case 0:
        //            //Добавим диапазон
        //
        //            String s = jFormattedTextField1.getText() + " - " + jFormattedTextField2.getText();
        //
        //            //1-й октет начального диапазона
        //            String start_1st = jFormattedTextField1.getText().substring(0, 3);
        //            //2-й октет начального диапазона
        //            String start_2nd = jFormattedTextField1.getText().substring(4, 7);
        //            //3-й октет начального диапазона
        //            String start_3nd = jFormattedTextField1.getText().substring(8, 11);
        //            //1-й октет конечного диапазона
        //            String end_1st = jFormattedTextField2.getText().substring(0, 3);
        //            //2-й октет конечного диапазона
        //            String end_2nd = jFormattedTextField2.getText().substring(4, 7);
        //            //3-й октет конечного диапазона
        //            String end_3nd = jFormattedTextField2.getText().substring(8, 11);
        //
        //            int step = Integer.parseInt(jTextField2.getText());
        //
        //            //                for (int j = Integer.parseInt(start_1st); j <=Integer.parseInt(end_1st); j++) {
        //                //                    Integer J = j;
        //                //                    for (int i = Integer.parseInt(start_2nd); i <=Integer.parseInt(end_2nd); i++) {
        //                    //                        Integer I = i;
        //                    //                        for (int p = Integer.parseInt(start_3nd); p < Integer.parseInt(end_3nd); p = p + step) {
        //                        //                            String str = J.toString() + "." + I.toString() +"."+ p + ".000" + " - " + J.toString() + "." + I.toString() +"."+ (p + step) + ".000";
        //                        //                            ipList.addElement(str);
        //                        //                        }
        //                    //                    }
        //                //
        //                //                }
        //            for (int j = Integer.parseInt(start_1st); j <= Integer.parseInt(end_1st); j++) {
        //                Integer J = j;
        //                for (int i = Integer.parseInt(start_2nd); i < Integer.parseInt(end_2nd); i = i + step) {
        //                    String str = J.toString() + "." + i + ".000.000" + " - " + J.toString() + "." + (i + step) + ".000.000";
        //                    ipList.addElement(str);
        //                }
        //
        //            }
        //            break;
        //            case 1:
        //            for (int j = 0; j < findCamPass.size(); j++) {
        //                ipList.addElement(findCamPass.get(j).toString());
        //            }
        //            break;
        //        }
        //
        //        jList1.setSelectedIndex(0);
        //        jList1.ensureIndexIsVisible(0);
        //        jLabel5.setText(String.valueOf(ipList.size()));
    }//GEN-LAST:event_jButton9ActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        res=0;
        setVisible(false);
        dispose();
        
    }//GEN-LAST:event_btnCancelActionPerformed
    public int getResult(){
        return res;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddNewJob dialog = new AddNewJob(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        res=0;
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    public javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
